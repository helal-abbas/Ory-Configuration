# log:
#   level: debug
#   format: json

# serve:
#   proxy:
#     cors:
#       enabled: true
#       allowed_origins:
#         - "*"
#       allowed_methods:
#         - POST
#         - GET
#         - PUT
#         - PATCH
#         - DELETE
#       allowed_headers:
#         - Authorization
#         - Content-Type
#       exposed_headers:
#         - Content-Type
#       allow_credentials: true
#       debug: true

# errors:
#   fallback:
#     - json

#   handlers:
#     redirect:
#       enabled: true
#       config:
#         to: http://192.168.0.6:3000/login
#         when:
#           - error:
#               - unauthorized
#               - forbidden
#             request:
#               header:
#                 accept:
#                   - text/html
#     json:
#       enabled: true
#       config:
#         verbose: true

# access_rules:
#   matching_strategy: glob
#   repositories:
#     - file:///etc/config/oathkeeper/access-rules.yml

# authenticators:
#   anonymous:
#     enabled: true
#     config:
#       subject: guest

#   cookie_session:
#     enabled: true
#     config:
#       check_session_url: http://kratos:4433/sessions/whoami
#       preserve_path: true
#       extra_from: "@this"
#       subject_from: "identity.id"
#       only:
#         - ory_kratos_session

#   noop:
#     enabled: true

# authorizers:
#   allow:
#     enabled: true

# mutators:
#   noop:
#     enabled: true


log:
  level: debug
  format: json

serve:
  proxy:
    port: 4455
    cors:
      enabled: true
      allowed_origins:
        - "http://192.168.0.6:4455"
      allowed_methods:
        - POST
        - GET
        - PUT
        - PATCH
        - DELETE
      allowed_headers:
        - Authorization
        - Content-Type 
        - Cookie
      exposed_headers:
        - Content-Type
        - Set-Cookie
      allow_credentials: true
      debug: true
  api:
    port: 4456
errors:
  fallback:
    - json

  handlers:
    redirect:
      enabled: true
      config:
        to: http://192.168.0.6:4455/login
        when:
          - error:
              - unauthorized
              - forbidden
            request:
              header:
                accept:
                  - text/html
    json:
      enabled: true
      config:
        verbose: true

access_rules:
  matching_strategy: glob
  repositories:
    - file:///etc/config/oathkeeper/access-rule.yml

authenticators:
  anonymous:
    enabled: true
    config:
      subject: guest

  cookie_session:
    enabled: true
    config:
      check_session_url: http://kratos:4433/sessions/whoami
      preserve_path: true
      extra_from: "@this"
      subject_from: "identity.id"
      only:
        - ory_kratos_session

  noop:
    enabled: true

authorizers:
  allow:
    enabled: true
  deny:
    enabled: true

  # remote_json:
  #   enabled: true
  #   config:
  #     remote: http://192.168.0.1:3000/api/ms-identities/rbac-role
  #     forward_response_headers_to_upstream:
  #       [
  #         "url",
  #       ]
  #     payload: |
  #       {
  #         "url":"{{ .MatchContext.URL}}",
  #       }
  #     retry:
  #       max_delay: 1s
  #       give_up_after: 1s

mutators:
  noop:
    enabled: true
  # header:
  #   ## Set enabled to true if the authenticator should be enabled and false to disable the authenticator. Defaults to false.
  #   enabled: true
  #   config:
  #     headers:
  #       X-User: "{{ print .Subject }}"